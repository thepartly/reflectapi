---
source: reflectapi-demo/src/tests/mod.rs
expression: s
---
{
  "openapi": "3.1.0",
  "info": {
    "title": "Demo application",
    "description": "This is a demo application",
    "version": "1.0.0"
  },
  "paths": {
    "/health.check": {
      "description": "Check the health of the service",
      "get": {
        "operationId": "health.check",
        "description": "Check the health of the service"
      },
      "post": {
        "operationId": "health.check",
        "description": "Check the health of the service"
      }
    },
    "/pets.create": {
      "description": "Create a new pet",
      "post": {
        "operationId": "pets.create",
        "description": "Create a new pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsCreateRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/pets.get-first": {
      "description": "Fetch first pet, if any exists",
      "post": {
        "operationId": "pets.get-first",
        "description": "Fetch first pet, if any exists"
      }
    },
    "/pets.list": {
      "description": "List available pets",
      "get": {
        "operationId": "pets.list",
        "description": "List available pets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsListRequest"
              }
            }
          },
          "required": true
        }
      },
      "post": {
        "operationId": "pets.list",
        "description": "List available pets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsListRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/pets.remove": {
      "description": "Remove an existing pet",
      "post": {
        "operationId": "pets.remove",
        "description": "Remove an existing pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsRemoveRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/pets.update": {
      "description": "Update an existing pet",
      "post": {
        "operationId": "pets.update",
        "description": "Update an existing pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsUpdateRequest"
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "()": {
        "title": "()",
        "description": "Unit type",
        "type": "boolean"
      },
      "f64": {
        "title": "f64",
        "description": "64-bit floating point number",
        "type": "boolean"
      },
      "myapi.model.Behavior": {
        "title": "myapi::model::Behavior",
        "description": "",
        "type": "integer"
      },
      "myapi.model.Kind": {
        "title": "myapi::model::Kind",
        "description": "",
        "type": "integer"
      },
      "myapi.model.Pet": {
        "title": "myapi::model::Pet",
        "description": "",
        "type": "object",
        "properties": {
          "age": {
            "$ref": "#/components/schemas/std.option.Option"
          },
          "behaviors": {
            "$ref": "#/components/schemas/std.vec.Vec"
          },
          "kind": {
            "$ref": "#/components/schemas/myapi.model.Kind"
          },
          "name": {
            "$ref": "#/components/schemas/std.string.String"
          }
        }
      },
      "myapi.proto.Headers": {
        "title": "myapi::proto::Headers",
        "description": "",
        "type": "object",
        "properties": {
          "authorization": {
            "$ref": "#/components/schemas/std.string.String"
          }
        }
      },
      "myapi.proto.Paginated": {
        "title": "myapi::proto::Paginated",
        "description": "",
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/std.option.Option"
          },
          "items": {
            "$ref": "#/components/schemas/std.vec.Vec"
          }
        }
      },
      "myapi.proto.PetsCreateError": {
        "title": "myapi::proto::PetsCreateError",
        "description": "",
        "type": "integer"
      },
      "myapi.proto.PetsCreateRequest": {
        "title": "myapi::proto::PetsCreateRequest",
        "description": "",
        "type": "object",
        "properties": {
          "0": {
            "$ref": "#/components/schemas/myapi.model.Pet"
          }
        }
      },
      "myapi.proto.PetsListError": {
        "title": "myapi::proto::PetsListError",
        "description": "",
        "type": "integer"
      },
      "myapi.proto.PetsListRequest": {
        "title": "myapi::proto::PetsListRequest",
        "description": "",
        "type": "object",
        "properties": {
          "cursor": {
            "$ref": "#/components/schemas/std.option.Option"
          },
          "limit": {
            "$ref": "#/components/schemas/std.option.Option"
          }
        }
      },
      "myapi.proto.PetsRemoveError": {
        "title": "myapi::proto::PetsRemoveError",
        "description": "",
        "type": "integer"
      },
      "myapi.proto.PetsRemoveRequest": {
        "title": "myapi::proto::PetsRemoveRequest",
        "description": "",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/std.string.String"
          }
        }
      },
      "myapi.proto.PetsUpdateError": {
        "title": "myapi::proto::PetsUpdateError",
        "description": "",
        "type": "integer"
      },
      "myapi.proto.PetsUpdateRequest": {
        "title": "myapi::proto::PetsUpdateRequest",
        "description": "",
        "type": "object",
        "properties": {
          "age": {
            "$ref": "#/components/schemas/reflectapi.Option"
          },
          "behaviors": {
            "$ref": "#/components/schemas/reflectapi.Option"
          },
          "kind": {
            "$ref": "#/components/schemas/std.option.Option"
          },
          "name": {
            "$ref": "#/components/schemas/std.string.String"
          }
        }
      },
      "myapi.proto.UnauthorizedError": {
        "title": "myapi::proto::UnauthorizedError",
        "description": "",
        "type": "object",
        "properties": {
          "0": {
            "$ref": "#/components/schemas/()"
          }
        }
      },
      "reflectapi.Empty": {
        "title": "reflectapi::Empty",
        "description": "Struct object with no fields",
        "type": "object",
        "properties": {}
      },
      "reflectapi.Infallible": {
        "title": "reflectapi::Infallible",
        "description": "Error object which is expected to be never returned",
        "type": "object",
        "properties": {}
      },
      "reflectapi.Option": {
        "title": "reflectapi::Option",
        "description": "Undefinable Option type",
        "type": "integer"
      },
      "std.option.Option": {
        "title": "std::option::Option",
        "description": "Optional nullable type",
        "type": "integer"
      },
      "std.string.String": {
        "title": "std::string::String",
        "description": "UTF-8 encoded string",
        "type": "boolean"
      },
      "std.vec.Vec": {
        "title": "std::vec::Vec",
        "description": "Expandable array type",
        "type": "boolean"
      },
      "u8": {
        "title": "u8",
        "description": "8-bit unsigned integer",
        "type": "boolean"
      }
    }
  }
}
