---
source: reflectapi-demo/src/tests/generics.rs
assertion_line: 151
expression: "super::into_input_schema::<TestStructWithCircularReferenceGenericWithoutBoxParentSpecific>().input_types"
---
{
  "types": [
    {
      "kind": "struct",
      "name": "reflectapi::Empty",
      "description": "Struct object with no fields"
    },
    {
      "kind": "struct",
      "name": "reflectapi_demo::tests::generics::TestStructWithCircularReferenceGenericWithoutBox",
      "parameters": [
        {
          "name": "A"
        },
        {
          "name": "B"
        }
      ],
      "fields": [
        {
          "name": "_f1",
          "type": {
            "name": "A"
          },
          "required": true
        },
        {
          "name": "_f2",
          "type": {
            "name": "B"
          },
          "required": true
        }
      ]
    },
    {
      "kind": "struct",
      "name": "reflectapi_demo::tests::generics::TestStructWithCircularReferenceGenericWithoutBoxParentSpecific",
      "fields": [
        {
          "name": "_f",
          "type": {
            "name": "reflectapi_demo::tests::generics::TestStructWithCircularReferenceGenericWithoutBox",
            "parameters": [
              {
                "name": "reflectapi_demo::tests::generics::TestStructWithCircularReferenceGenericWithoutBox",
                "parameters": [
                  {
                    "name": "u8"
                  },
                  {
                    "name": "u16"
                  }
                ]
              },
              {
                "name": "reflectapi_demo::tests::generics::TestStructWithCircularReferenceGenericWithoutBox",
                "parameters": [
                  {
                    "name": "std::string::String"
                  },
                  {
                    "name": "u32"
                  }
                ]
              }
            ]
          },
          "required": true
        }
      ]
    },
    {
      "kind": "primitive",
      "name": "std::string::String",
      "description": "UTF-8 encoded string"
    },
    {
      "kind": "primitive",
      "name": "u16",
      "description": "16-bit unsigned integer"
    },
    {
      "kind": "primitive",
      "name": "u32",
      "description": "32-bit unsigned integer"
    },
    {
      "kind": "primitive",
      "name": "u8",
      "description": "8-bit unsigned integer"
    }
  ]
}
