---
source: reflectapi-demo/src/tests/enums.rs
expression: schema
---
{
  "name": "",
  "functions": [
    {
      "name": "inout_test",
      "path": "",
      "input_type": {
        "name": "reflectapi_demo::tests::enums::E"
      },
      "output_type": {
        "name": "reflectapi_demo::tests::enums::E"
      },
      "serialization": [
        "json",
        "msgpack"
      ]
    }
  ],
  "input_types": {
    "types": [
      {
        "kind": "primitive",
        "name": "f64",
        "description": "64-bit floating point number"
      },
      {
        "kind": "struct",
        "name": "reflectapi::Empty",
        "description": "Struct object with no fields",
        "fields": "none"
      },
      {
        "kind": "enum",
        "name": "reflectapi_demo::tests::enums::A",
        "variants": [
          {
            "name": "X",
            "fields": "none"
          },
          {
            "name": "Y",
            "fields": "none"
          },
          {
            "name": "Z",
            "fields": "none"
          }
        ]
      },
      {
        "kind": "struct",
        "name": "reflectapi_demo::tests::enums::B",
        "fields": {
          "named": [
            {
              "name": "p",
              "type": {
                "name": "std::string::String"
              },
              "required": true
            },
            {
              "name": "q",
              "type": {
                "name": "f64"
              },
              "required": true
            }
          ]
        }
      },
      {
        "kind": "enum",
        "name": "reflectapi_demo::tests::enums::E",
        "representation": {
          "internal": {
            "tag": "tag"
          }
        },
        "variants": [
          {
            "name": "a",
            "fields": {
              "unnamed": [
                {
                  "name": "0",
                  "type": {
                    "name": "reflectapi_demo::tests::enums::B"
                  },
                  "required": true
                }
              ]
            }
          },
          {
            "name": "b",
            "fields": {
              "unnamed": [
                {
                  "name": "0",
                  "type": {
                    "name": "reflectapi_demo::tests::enums::A"
                  },
                  "required": true
                }
              ]
            }
          },
          {
            "name": "c",
            "fields": {
              "named": [
                {
                  "name": "items",
                  "type": {
                    "name": "std::vec::Vec",
                    "arguments": [
                      {
                        "name": "std::string::String"
                      }
                    ]
                  },
                  "required": true
                },
                {
                  "name": "value",
                  "type": {
                    "name": "f64"
                  },
                  "required": true
                }
              ]
            }
          },
          {
            "name": "d",
            "fields": "none"
          }
        ]
      },
      {
        "kind": "primitive",
        "name": "std::string::String",
        "description": "UTF-8 encoded string"
      },
      {
        "kind": "primitive",
        "name": "std::vec::Vec",
        "description": "Expandable array type",
        "parameters": [
          {
            "name": "T"
          }
        ]
      }
    ]
  },
  "output_types": {
    "types": [
      {
        "kind": "primitive",
        "name": "f64",
        "description": "64-bit floating point number"
      },
      {
        "kind": "struct",
        "name": "reflectapi::Infallible",
        "description": "Error object which is expected to be never returned",
        "fields": "none"
      },
      {
        "kind": "enum",
        "name": "reflectapi_demo::tests::enums::A",
        "variants": [
          {
            "name": "X",
            "fields": "none"
          },
          {
            "name": "Y",
            "fields": "none"
          },
          {
            "name": "Z",
            "fields": "none"
          }
        ]
      },
      {
        "kind": "struct",
        "name": "reflectapi_demo::tests::enums::B",
        "fields": {
          "named": [
            {
              "name": "p",
              "type": {
                "name": "std::string::String"
              },
              "required": true
            },
            {
              "name": "q",
              "type": {
                "name": "f64"
              },
              "required": true
            }
          ]
        }
      },
      {
        "kind": "enum",
        "name": "reflectapi_demo::tests::enums::E",
        "representation": {
          "internal": {
            "tag": "tag"
          }
        },
        "variants": [
          {
            "name": "a",
            "fields": {
              "unnamed": [
                {
                  "name": "0",
                  "type": {
                    "name": "reflectapi_demo::tests::enums::B"
                  },
                  "required": true
                }
              ]
            }
          },
          {
            "name": "b",
            "fields": {
              "unnamed": [
                {
                  "name": "0",
                  "type": {
                    "name": "reflectapi_demo::tests::enums::A"
                  },
                  "required": true
                }
              ]
            }
          },
          {
            "name": "c",
            "fields": {
              "named": [
                {
                  "name": "items",
                  "type": {
                    "name": "std::vec::Vec",
                    "arguments": [
                      {
                        "name": "std::string::String"
                      }
                    ]
                  },
                  "required": true
                },
                {
                  "name": "value",
                  "type": {
                    "name": "f64"
                  },
                  "required": true
                }
              ]
            }
          },
          {
            "name": "d",
            "fields": "none"
          }
        ]
      },
      {
        "kind": "primitive",
        "name": "std::string::String",
        "description": "UTF-8 encoded string"
      },
      {
        "kind": "primitive",
        "name": "std::vec::Vec",
        "description": "Expandable array type",
        "parameters": [
          {
            "name": "T"
          }
        ]
      }
    ]
  }
}
