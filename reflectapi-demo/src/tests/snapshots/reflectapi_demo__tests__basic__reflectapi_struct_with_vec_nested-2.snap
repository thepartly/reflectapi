---
source: reflectapi-demo/src/tests/basic.rs
expression: "super::into_typescript_code::<TestStructWithVecNested>()"
---
export namespace __definition {
  export interface Interface {
    inout_test: (
      input: reflectapi_demo.tests.basic.TestStructWithVecNested,
      headers: {},
    ) => AsyncResult<reflectapi_demo.tests.basic.TestStructWithVecNested, {}>;
  }
}
export namespace reflectapi {
  /// Struct object with no fields
  export interface Empty {}

  /// Error object which is expected to be never returned
  export interface Infallible {}
}

export namespace reflectapi_demo {
  export namespace tests {
    export namespace basic {
      export interface TestStructWithVecNested {
        _f: Array<Array<reflectapi_demo.tests.test_lib.TestStructNested>>;
      }
    }

    export namespace test_lib {
      export interface TestStructNested {
        _f: string;
      }
    }
  }
}

namespace __implementation {

  function inout_test(client: Client) {
    return (
      input: reflectapi_demo.tests.basic.TestStructWithVecNested,
      headers: {},
    ) =>
      __request<
        reflectapi_demo.tests.basic.TestStructWithVecNested,
        {},
        reflectapi_demo.tests.basic.TestStructWithVecNested,
        {}
      >(client, "/inout_test", input, headers);
  }
}
