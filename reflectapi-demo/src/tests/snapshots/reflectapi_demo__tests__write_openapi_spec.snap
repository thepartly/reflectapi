---
source: reflectapi-demo/src/tests/mod.rs
expression: s
snapshot_kind: text
---
{
  "openapi": "3.1.0",
  "info": {
    "title": "Demo application",
    "description": "This is a demo application",
    "version": "1.0.0"
  },
  "paths": {
    "/pets.create": {
      "description": "Create a new pet",
      "post": {
        "operationId": "pets.create",
        "description": "Create a new pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "empty object",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "default": {
            "description": "Error cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/myapi.proto.PetsCreateError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/std.string.String"
            }
          }
        ]
      }
    },
    "/pets.delete": {
      "description": "Remove an existing pet",
      "post": {
        "operationId": "pets.delete",
        "description": "Remove an existing pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsRemoveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "empty object",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "default": {
            "description": "Error cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/myapi.proto.PetsRemoveError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/std.string.String"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/pets.get-first": {
      "description": "Fetch first pet, if any exists",
      "post": {
        "operationId": "pets.get-first",
        "description": "Fetch first pet, if any exists",
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Null",
                      "type": "null"
                    },
                    {
                      "$ref": "#/components/schemas/myapi.model.output.Pet"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Error cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/myapi.proto.UnauthorizedError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/std.string.String"
            }
          }
        ]
      }
    },
    "/pets.list": {
      "description": "List available pets",
      "post": {
        "operationId": "pets.list",
        "description": "List available pets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsListRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "myapi.proto.Paginated<myapi.model.output.Pet>",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "cursor": {
                      "description": " cursor for getting next page",
                      "oneOf": [
                        {
                          "description": "Null",
                          "type": "null"
                        },
                        {
                          "$ref": "#/components/schemas/std.string.String"
                        }
                      ]
                    },
                    "items": {
                      "description": " slice of a collection",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/myapi.model.output.Pet"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/myapi.proto.PetsListError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/std.string.String"
            }
          }
        ]
      }
    },
    "/pets.remove": {
      "description": "Remove an existing pet",
      "post": {
        "operationId": "pets.remove",
        "description": "Remove an existing pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsRemoveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "empty object",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "default": {
            "description": "Error cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/myapi.proto.PetsRemoveError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/std.string.String"
            }
          }
        ]
      }
    },
    "/pets.update": {
      "description": "Update an existing pet",
      "post": {
        "operationId": "pets.update",
        "description": "Update an existing pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/myapi.proto.PetsUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "empty object",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "default": {
            "description": "Error cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/myapi.proto.PetsUpdateError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/std.string.String"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "f64": {
        "description": "64-bit floating point number",
        "type": "number"
      },
      "myapi.model.Behavior": {
        "oneOf": [
          {
            "const": "Calm"
          },
          {
            "type": "object",
            "title": "Aggressive",
            "required": [
              "Aggressive"
            ],
            "properties": {
              "Aggressive": {
                "type": "array",
                "prefixItems": [
                  {
                    "$ref": "#/components/schemas/f64"
                  },
                  {
                    "$ref": "#/components/schemas/std.string.String"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "title": "Other",
            "required": [
              "Other"
            ],
            "properties": {
              "Other": {
                "type": "object",
                "title": "Other",
                "required": [
                  "description"
                ],
                "properties": {
                  "description": {
                    "description": " Custom provided description of a behavior",
                    "$ref": "#/components/schemas/std.string.String"
                  },
                  "notes": {
                    "description": " Additional notes\n Up to a user to put free text here",
                    "$ref": "#/components/schemas/std.string.String"
                  }
                }
              }
            }
          }
        ]
      },
      "myapi.model.Kind": {
        "oneOf": [
          {
            "const": "dog",
            "description": " A dog"
          },
          {
            "const": "cat",
            "description": " A cat"
          }
        ]
      },
      "myapi.model.input.Pet": {
        "type": "object",
        "title": "myapi.model.input.Pet",
        "required": [
          "name",
          "kind"
        ],
        "properties": {
          "age": {
            "description": " age of the pet",
            "deprecated": true,
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/u8"
              }
            ]
          },
          "behaviors": {
            "description": " behaviors of the pet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/myapi.model.Behavior"
            }
          },
          "kind": {
            "description": " kind of pet",
            "$ref": "#/components/schemas/myapi.model.Kind"
          },
          "name": {
            "description": " identity",
            "$ref": "#/components/schemas/std.string.String"
          },
          "updated_at": {
            "description": "DateTime at a given timezone (RFC3339 format)",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "myapi.model.output.Pet": {
        "type": "object",
        "title": "myapi.model.output.Pet",
        "required": [
          "name",
          "kind",
          "updated_at"
        ],
        "properties": {
          "age": {
            "description": " age of the pet",
            "deprecated": true,
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/u8"
              }
            ]
          },
          "behaviors": {
            "description": " behaviors of the pet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/myapi.model.Behavior"
            }
          },
          "kind": {
            "description": " kind of pet",
            "$ref": "#/components/schemas/myapi.model.Kind"
          },
          "name": {
            "description": " identity",
            "$ref": "#/components/schemas/std.string.String"
          },
          "updated_at": {
            "description": "DateTime at a given timezone (RFC3339 format)",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "myapi.proto.PetsCreateError": {
        "oneOf": [
          {
            "const": "Conflict"
          },
          {
            "const": "NotAuthorized"
          },
          {
            "type": "object",
            "title": "InvalidIdentity",
            "required": [
              "InvalidIdentity"
            ],
            "properties": {
              "InvalidIdentity": {
                "type": "object",
                "title": "InvalidIdentity",
                "required": [
                  "message"
                ],
                "properties": {
                  "message": {
                    "$ref": "#/components/schemas/std.string.String"
                  }
                }
              }
            }
          }
        ]
      },
      "myapi.proto.PetsCreateRequest": {
        "type": "array",
        "prefixItems": [
          {
            "$ref": "#/components/schemas/myapi.model.input.Pet"
          }
        ]
      },
      "myapi.proto.PetsListError": {
        "oneOf": [
          {
            "const": "InvalidCursor"
          },
          {
            "const": "Unauthorized"
          }
        ]
      },
      "myapi.proto.PetsListRequest": {
        "type": "object",
        "title": "myapi.proto.PetsListRequest",
        "properties": {
          "cursor": {
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/std.string.String"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/u8"
              }
            ]
          }
        }
      },
      "myapi.proto.PetsRemoveError": {
        "oneOf": [
          {
            "const": "NotFound"
          },
          {
            "const": "NotAuthorized"
          }
        ]
      },
      "myapi.proto.PetsRemoveRequest": {
        "type": "object",
        "title": "myapi.proto.PetsRemoveRequest",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": " identity",
            "$ref": "#/components/schemas/std.string.String"
          }
        }
      },
      "myapi.proto.PetsUpdateError": {
        "oneOf": [
          {
            "const": "NotFound"
          },
          {
            "const": "NotAuthorized"
          }
        ]
      },
      "myapi.proto.PetsUpdateRequest": {
        "type": "object",
        "title": "myapi.proto.PetsUpdateRequest",
        "required": [
          "name"
        ],
        "properties": {
          "age": {
            "description": " age of the pet, nullable in the model",
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/u8"
              }
            ]
          },
          "behaviors": {
            "description": " behaviors of the pet, nullable in the model",
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "description": "Expandable array type",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/myapi.model.Behavior"
                }
              }
            ]
          },
          "kind": {
            "description": " kind of pet, non nullable in the model",
            "oneOf": [
              {
                "description": "Null",
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/myapi.model.Kind"
              }
            ]
          },
          "name": {
            "description": " identity",
            "$ref": "#/components/schemas/std.string.String"
          }
        }
      },
      "myapi.proto.UnauthorizedError": {
        "type": "array",
        "prefixItems": [
          {
            "$ref": "#/components/schemas/std.tuple.Tuple0"
          }
        ]
      },
      "std.string.String": {
        "description": "UTF-8 encoded string",
        "type": "string"
      },
      "std.tuple.Tuple0": {
        "description": "Unit type",
        "type": "null"
      },
      "u8": {
        "description": "8-bit unsigned integer",
        "type": "integer"
      }
    }
  }
}
