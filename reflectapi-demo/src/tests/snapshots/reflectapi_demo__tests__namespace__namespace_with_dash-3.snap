---
source: reflectapi-demo/src/tests/namespace.rs
expression: rust
---
// DO NOT MODIFY THIS FILE MANUALLY
// This file was generated by reflectapi-cli
//
// Schema name: pet-orders
//

#![allow(non_camel_case_types)]
#![allow(dead_code)]

pub use interface::Interface;
pub use reflectapi::rt::*;

pub mod interface {

    #[derive(Debug)]
    pub struct Interface<C: reflectapi::rt::Client + Clone> {
        pub jobs_two: JobsTwoInterface<C>,
        client: C,
        base_url: std::string::String,
    }

    impl<C: reflectapi::rt::Client + Clone> Interface<C> {
        pub fn new(client: C, base_url: std::string::String) -> Self {
            Self {
                jobs_two: JobsTwoInterface::new(client.clone(), base_url.clone()),
                client,
                base_url,
            }
        }
    }

    #[derive(Debug)]
    pub struct JobsTwoInterface<C: reflectapi::rt::Client + Clone> {
        pub pet_orders: JobsTwoPetOrdersInterface<C>,
        client: C,
        base_url: std::string::String,
    }

    impl<C: reflectapi::rt::Client + Clone> JobsTwoInterface<C> {
        pub fn new(client: C, base_url: std::string::String) -> Self {
            Self {
                pet_orders: JobsTwoPetOrdersInterface::new(client.clone(), base_url.clone()),
                client,
                base_url,
            }
        }
    }

    #[derive(Debug)]
    pub struct JobsTwoPetOrdersInterface<C: reflectapi::rt::Client + Clone> {
        client: C,
        base_url: std::string::String,
    }

    impl<C: reflectapi::rt::Client + Clone> JobsTwoPetOrdersInterface<C> {
        pub fn new(client: C, base_url: std::string::String) -> Self {
            Self { client, base_url }
        }
        /// desc
        pub async fn list_x(
            &self,
            input: reflectapi::Empty,
            headers: reflectapi::Empty,
        ) -> Result<reflectapi::Empty, reflectapi::rt::Error<reflectapi::Empty, C::Error>> {
            reflectapi::rt::__request_impl(
                &self.client,
                &self.base_url,
                "/jobs-two.pet-orders.list-x",
                input,
                headers,
            )
            .await
        }
    }
}
