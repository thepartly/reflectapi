---
source: reflectapi-demo/src/tests/enums.rs
expression: "super :: into_input_typescript_code :: <\nTestEnumWithGenericsAndFieldsAndNamedFields::<u8> > ()"
---
// DO NOT MODIFY THIS FILE MANUALLY
// This file was generated by reflectapi-cli
//
// Schema name:
//

export function client(base: string | Client): __definition.Interface {
  return __implementation.__client(base);
}

export namespace __definition {
  export interface Interface {
    input_test: (
      input: reflectapi_demo.tests.enums.TestEnumWithGenericsAndFieldsAndNamedFields<number /* u8 */>,
      headers: {},
      options?: RequestOptions,
    ) => AsyncResult<{}, {}>;
  }
}
export namespace reflectapi {
  /**
   * Struct object with no fields
   */
  export interface Empty {}

  /**
   * Error object which is expected to be never returned
   */
  export interface Infallible {}
}

export namespace reflectapi_demo {
  export namespace tests {
    export namespace enums {
      export type TestEnumWithGenericsAndFieldsAndNamedFields<T> =
        | {
            Variant1: number /* u8 */;
          }
        | {
            Variant2: [T, T];
          }
        | {
            Variant3: {
              field1: number /* u8 */;
              field2: T;
            };
          };
    }
  }
}

namespace __implementation {

  function input_test(client: Client) {
    return (
      input: reflectapi_demo.tests.enums.TestEnumWithGenericsAndFieldsAndNamedFields<number /* u8 */>,
      headers: {},
      options?: RequestOptions,
    ) =>
      __request<
        reflectapi_demo.tests.enums.TestEnumWithGenericsAndFieldsAndNamedFields<number /* u8 */>,
        {},
        {},
        {}
      >(client, "/input_test", input, headers, options);
  }
}
