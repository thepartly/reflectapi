---
source: reflect-demo/src/tests/serde.rs
expression: "super::into_schema::<TestStructWithFlattenOptionalAndRequired>()"
---
{
  "name": "",
  "functions": [
    {
      "name": "",
      "input_type": {
        "name": "reflect_demo::tests::serde::TestStructWithFlattenOptionalAndRequired"
      },
      "output_type": {
        "name": "reflect_demo::tests::serde::TestStructWithFlattenOptionalAndRequired"
      },
      "serialization": [
        "json"
      ]
    }
  ],
  "input_types": {
    "types": [
      {
        "kind": "struct",
        "name": "reflect::Empty",
        "description": "Struct object with no fields"
      },
      {
        "kind": "struct",
        "name": "reflect_demo::tests::serde::TestStructRenameAll",
        "fields": [
          {
            "name": "fieldName",
            "type": {
              "name": "u8"
            },
            "required": true
          }
        ]
      },
      {
        "kind": "struct",
        "name": "reflect_demo::tests::serde::TestStructWithFlattenNested",
        "fields": [
          {
            "name": "f",
            "type": {
              "name": "u8"
            },
            "required": true
          }
        ]
      },
      {
        "kind": "struct",
        "name": "reflect_demo::tests::serde::TestStructWithFlattenOptionalAndRequired",
        "fields": [
          {
            "name": "g",
            "type": {
              "name": "std::option::Option",
              "parameters": [
                {
                  "name": "reflect_demo::tests::serde::TestStructWithFlattenNested"
                }
              ]
            },
            "flattened": true
          },
          {
            "name": "k",
            "type": {
              "name": "reflect_demo::tests::serde::TestStructRenameAll"
            },
            "required": true,
            "flattened": true
          }
        ]
      },
      {
        "kind": "enum",
        "name": "std::option::Option",
        "description": "Optional nullable type",
        "parameters": [
          {
            "name": "T"
          }
        ],
        "representation": "None",
        "variants": [
          {
            "name": "None",
            "description": "The value is not provided, i.e. null"
          },
          {
            "name": "Some",
            "description": "The value is provided and set to some value",
            "fields": [
              {
                "name": "0",
                "type": {
                  "name": "T"
                }
              }
            ]
          }
        ]
      },
      {
        "kind": "primitive",
        "name": "u8",
        "description": "8-bit unsigned integer"
      }
    ]
  },
  "output_types": {
    "types": [
      {
        "kind": "struct",
        "name": "reflect::Infallible",
        "description": "Error object which is expected to be never returned"
      },
      {
        "kind": "struct",
        "name": "reflect_demo::tests::serde::TestStructRenameAll",
        "fields": [
          {
            "name": "fieldName",
            "type": {
              "name": "u8"
            },
            "required": true
          }
        ]
      },
      {
        "kind": "struct",
        "name": "reflect_demo::tests::serde::TestStructWithFlattenNested",
        "fields": [
          {
            "name": "f",
            "type": {
              "name": "u8"
            },
            "required": true
          }
        ]
      },
      {
        "kind": "struct",
        "name": "reflect_demo::tests::serde::TestStructWithFlattenOptionalAndRequired",
        "fields": [
          {
            "name": "g",
            "type": {
              "name": "std::option::Option",
              "parameters": [
                {
                  "name": "reflect_demo::tests::serde::TestStructWithFlattenNested"
                }
              ]
            },
            "flattened": true
          },
          {
            "name": "k",
            "type": {
              "name": "reflect_demo::tests::serde::TestStructRenameAll"
            },
            "required": true,
            "flattened": true
          }
        ]
      },
      {
        "kind": "enum",
        "name": "std::option::Option",
        "description": "Optional nullable type",
        "parameters": [
          {
            "name": "T"
          }
        ],
        "representation": "None",
        "variants": [
          {
            "name": "None",
            "description": "The value is not provided, i.e. null"
          },
          {
            "name": "Some",
            "description": "The value is provided and set to some value",
            "fields": [
              {
                "name": "0",
                "type": {
                  "name": "T"
                }
              }
            ]
          }
        ]
      },
      {
        "kind": "primitive",
        "name": "u8",
        "description": "8-bit unsigned integer"
      }
    ]
  }
}
