[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "reflectapi-runtime"
version = "0.1.0"
description = "Runtime library for ReflectAPI Python clients"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Partly"}
]
keywords = ["api", "client", "codegen", "rest", "http"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "hypothesis>=6.0.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "hypothesis>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/thepartly/reflectapi"
Repository = "https://github.com/thepartly/reflectapi"
Documentation = "https://docs.rs/reflectapi/latest/reflectapi/"

[tool.hatch.build.targets.wheel]
packages = ["src/reflectapi_runtime"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "B024",  # abstract base class without abstract methods
    "B904",  # raise from err/None - we handle this explicitly
    "UP046", # Generic[T] vs type parameters - keeping for compatibility
    "UP047", # Generic functions - keeping for compatibility
    "SIM105", # contextlib.suppress - prefer explicit error handling
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101", "F401", "F811"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/reflectapi_runtime",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.5",
    "ty>=0.0.1a16",
]
